/*!
 * Hey Listen
 * Music Management
 * http://heylisten.nl/
 * @author Daan van der Zwaag
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{background-color:#000}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{width:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;position:relative;padding:2rem}.header nav{position:absolute;top:2rem;right:2rem}.nav ul{list-style:none}.main{width:100%;padding:2rem;margin:0 auto;max-width:120em}footer{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;background-color:#fff;-ms-flex-direction:column;flex-direction:column;color:#000;font-size:1em;text-align:justify}footer p{margin:5em 2em;font-weight:300;max-width:60em}footer p a{text-decoration:none;position:relative;color:#4c00ec;transition:.5s ease}footer p a:after{content:'';position:absolute;bottom:0;left:0;width:0;border-bottom:2px solid #4c00ec;transition:.5s ease}footer p a:hover:after{width:100%}.logo--dirtcaps{-webkit-animation:c 5ms infinite;animation:c 5ms infinite}.trackthis{-webkit-animation:c 5ms infinite,a 50ms infinite,b 4s infinite;animation:c 5ms infinite,a 50ms infinite,b 4s infinite}@-webkit-keyframes a{50%{-webkit-transform:translateX(2px);transform:translateX(2px)}51%{-webkit-transform:translateX(0);transform:translateX(0)}}@keyframes a{50%{-webkit-transform:translateX(2px);transform:translateX(2px)}51%{-webkit-transform:translateX(0);transform:translateX(0)}}@-webkit-keyframes b{30%{-webkit-transform:translateY(2px);transform:translateY(2px)}31%{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes b{30%{-webkit-transform:translateY(2px);transform:translateY(2px)}31%{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes c{40%{opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);-webkit-transform:scale(1);transform:scale(1);-webkit-transform:skew(0,0);transform:skew(0,0)}41%{opacity:.8;-webkit-transform:translate3D(-20px,0,0);transform:translate3D(-20px,0,0);-webkit-transform:scaleY(1.2);transform:scaleY(1.2);-webkit-transform:skew(50deg,0);transform:skew(50deg,0)}42%{opacity:.8;-webkit-transform:translate3D(20px,0,0);transform:translate3D(20px,0,0);-webkit-transform:scaleY(1.2);transform:scaleY(1.2);-webkit-transform:skew(-80deg,0);transform:skew(-80deg,0)}43%{opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);-webkit-transform:scale(1);transform:scale(1);-webkit-transform:skew(0,0);transform:skew(0,0)}}@keyframes c{40%{opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);-webkit-transform:scale(1);transform:scale(1);-webkit-transform:skew(0,0);transform:skew(0,0)}41%{opacity:.8;-webkit-transform:translate3D(-20px,0,0);transform:translate3D(-20px,0,0);-webkit-transform:scaleY(1.2);transform:scaleY(1.2);-webkit-transform:skew(50deg,0);transform:skew(50deg,0)}42%{opacity:.8;-webkit-transform:translate3D(20px,0,0);transform:translate3D(20px,0,0);-webkit-transform:scaleY(1.2);transform:scaleY(1.2);-webkit-transform:skew(-80deg,0);transform:skew(-80deg,0)}43%{opacity:1;-webkit-transform:translate3D(0,0,0);transform:translate3D(0,0,0);-webkit-transform:scale(1);transform:scale(1);-webkit-transform:skew(0,0);transform:skew(0,0)}}h1+a{color:#fff;text-decoration:none}h1+a,h1+a:hover{transition:all .3s linear}h1+a:hover{text-shadow:#00dc93 1px 1px,#00dc93 2px 2px,#00dc93 3px 3px,#00dc93 4px 4px,#00dc93 5px 5px}::selection{background:#000;color:#fff;text-shadow:none}::-moz-selection{background:#000;color:#fff;text-shadow:none}::-webkit-selection{background:#000;color:#fff;text-shadow:none}.lazy-hidden{background:transparent url(../img/ring.svg) no-repeat 50% 50%}.logo a{color:#fff}.logo a,.logo a svg{-webkit-filter:url(#drop-shadow);filter:url(#drop-shadow)}.logo a svg{fill:#94d31b;width:100%;height:auto}.glitch{fill:#fff;font-size:150px;text-transform:upercase;position:relative;display:inline-block}.glitch:after,.glitch:before{content:url(http://dirtcaps.dvdz.design/img/logo_hey-listen_V3.svg);position:absolute;top:0;left:0;width:100%;height:100%;background:#000}.glitch:before{left:3px;clip:rect(0,0,-150px,300px);-webkit-animation:glitch-anim-2 9s infinite linear alternate-reverse;animation:glitch-anim-2 9s infinite linear alternate-reverse}.glitch:after{left:-3px;clip:rect(150px,300px,125px,0);-webkit-animation:e 3.5s infinite linear alternate-reverse;animation:e 3.5s infinite linear alternate-reverse}.glitch{color:#fff}.glitch svg{fill:green;-webkit-animation:d 4s infinite linear alternate-reverse;animation:d 4s infinite linear alternate-reverse;width:100%;height:auto}@-webkit-keyframes d{32%{-webkit-filter:drop-shadow(0);filter:none}33%{-webkit-filter:drop-shadow(-3px 1px 0 red)}34%{-webkit-filter:drop-shadow(0);filter:none}48%{-webkit-filter:drop-shadow(0);filter:none}49.9%{-webkit-filter:drop-shadow(3px 1px 0 green)}50%{-webkit-filter:drop-shadow(0);filter:none}97%{-webkit-filter:drop-shadow(0);filter:none}98%{-webkit-filter:drop-shadow(4px -3px 0 blue)}99%{-webkit-filter:drop-shadow(0);filter:none}}@keyframes d{32%{-webkit-filter:drop-shadow(0);filter:none}33%{-webkit-filter:drop-shadow(-3px 1px 0 red)}34%{-webkit-filter:drop-shadow(0);filter:none}48%{-webkit-filter:drop-shadow(0);filter:none}49.9%{-webkit-filter:drop-shadow(3px 1px 0 green)}50%{-webkit-filter:drop-shadow(0);filter:none}97%{-webkit-filter:drop-shadow(0);filter:none}98%{-webkit-filter:drop-shadow(4px -3px 0 blue)}99%{-webkit-filter:drop-shadow(0);filter:none}}@-webkit-keyframes e{0%{clip:rect(27px,9999px,185px,0)}8.33333%{clip:rect(182px,9999px,106px,0)}16.66667%{clip:rect(220px,9999px,44px,0)}25%{clip:rect(167px,9999px,170px,0)}33.33333%{clip:rect(234px,9999px,185px,0)}41.66667%{clip:rect(52px,9999px,16px,0)}50%{clip:rect(264px,9999px,295px,0)}58.33333%{clip:rect(90px,9999px,95px,0)}66.66667%{clip:rect(34px,9999px,33px,0)}75%{clip:rect(180px,9999px,229px,0)}83.33333%{clip:rect(221px,9999px,141px,0)}91.66667%{clip:rect(184px,9999px,34px,0)}to{clip:rect(220px,9999px,182px,0)}}@keyframes e{0%{clip:rect(27px,9999px,185px,0)}8.33333%{clip:rect(182px,9999px,106px,0)}16.66667%{clip:rect(220px,9999px,44px,0)}25%{clip:rect(167px,9999px,170px,0)}33.33333%{clip:rect(234px,9999px,185px,0)}41.66667%{clip:rect(52px,9999px,16px,0)}50%{clip:rect(264px,9999px,295px,0)}58.33333%{clip:rect(90px,9999px,95px,0)}66.66667%{clip:rect(34px,9999px,33px,0)}75%{clip:rect(180px,9999px,229px,0)}83.33333%{clip:rect(221px,9999px,141px,0)}91.66667%{clip:rect(184px,9999px,34px,0)}to{clip:rect(220px,9999px,182px,0)}}.music-player{position:relative;overflow:hidden;max-height:600px;transition:all .45s cubic-bezier(.68,-.55,.265,1.55);opacity:1;min-height:10em;background-color:#333;margin:0 2% 2% 0}.music-player .iframe--wrapper{height:300px;background-color:#333;position:relative}.music-player .iframe--wrapper:after{content:'';position:absolute;top:0;width:100%;height:100%;background-color:#000;mix-blend-mode:color;transition:all .3s ease-in;pointer-events:none}.music-player .iframe--wrapper iframe{height:300px;width:100%}.music-player:hover{transition:all .45s cubic-bezier(.68,-.55,.265,1.55);-webkit-transform:translate(-1rem,-1rem);transform:translate(-1rem,-1rem);box-shadow:.00707rem .00707rem 0 #fff,.01414rem .01414rem 0 #fff,.02121rem .02121rem 0 #fff,.02828rem .02828rem 0 #fff,.03536rem .03536rem 0 #fff,.04243rem .04243rem 0 #fff,.0495rem .0495rem 0 #fff,.05657rem .05657rem 0 #fff,.06364rem .06364rem 0 #fff,.07071rem .07071rem 0 #fff,.07778rem .07778rem 0 #fff,.08485rem .08485rem 0 #fff,.09192rem .09192rem 0 #fff,.09899rem .09899rem 0 #fff,.10607rem .10607rem 0 #fff,.11314rem .11314rem 0 #fff,.12021rem .12021rem 0 #fff,.12728rem .12728rem 0 #fff,.13435rem .13435rem 0 #fff,.14142rem .14142rem 0 #fff,.14849rem .14849rem 0 #fff,.15556rem .15556rem 0 #fff,.16263rem .16263rem 0 #fff,.16971rem .16971rem 0 #fff,.17678rem .17678rem 0 #fff,.18385rem .18385rem 0 #fff,.19092rem .19092rem 0 #fff,.19799rem .19799rem 0 #fff,.20506rem .20506rem 0 #fff,.21213rem .21213rem 0 #fff,.2192rem .2192rem 0 #fff,.22627rem .22627rem 0 #fff,.23335rem .23335rem 0 #fff,.24042rem .24042rem 0 #fff,.24749rem .24749rem 0 #fff,.25456rem .25456rem 0 #fff,.26163rem .26163rem 0 #fff,.2687rem .2687rem 0 #fff,.27577rem .27577rem 0 #fff,.28284rem .28284rem 0 #fff,.28991rem .28991rem 0 #fff,.29698rem .29698rem 0 #fff,.30406rem .30406rem 0 #fff,.31113rem .31113rem 0 #fff,.3182rem .3182rem 0 #fff,.32527rem .32527rem 0 #fff,.33234rem .33234rem 0 #fff,.33941rem .33941rem 0 #fff,.34648rem .34648rem 0 #fff,.35355rem .35355rem 0 #fff,.36062rem .36062rem 0 #fff,.3677rem .3677rem 0 #fff,.37477rem .37477rem 0 #fff,.38184rem .38184rem 0 #fff,.38891rem .38891rem 0 #fff,.39598rem .39598rem 0 #fff,.40305rem .40305rem 0 #fff,.41012rem .41012rem 0 #fff,.41719rem .41719rem 0 #fff,.42426rem .42426rem 0 #fff,.43134rem .43134rem 0 #fff,.43841rem .43841rem 0 #fff,.44548rem .44548rem 0 #fff,.45255rem .45255rem 0 #fff,.45962rem .45962rem 0 #fff,.46669rem .46669rem 0 #fff,.47376rem .47376rem 0 #fff,.48083rem .48083rem 0 #fff,.4879rem .4879rem 0 #fff,.49497rem .49497rem 0 #fff,.50205rem .50205rem 0 #fff,.50912rem .50912rem 0 #fff,.51619rem .51619rem 0 #fff,.52326rem .52326rem 0 #fff,.53033rem .53033rem 0 #fff,.5374rem .5374rem 0 #fff,.54447rem .54447rem 0 #fff,.55154rem .55154rem 0 #fff,.55861rem .55861rem 0 #fff,.56569rem .56569rem 0 #fff,.57276rem .57276rem 0 #fff,.57983rem .57983rem 0 #fff,.5869rem .5869rem 0 #fff,.59397rem .59397rem 0 #fff,.60104rem .60104rem 0 #fff,.60811rem .60811rem 0 #fff,.61518rem .61518rem 0 #fff,.62225rem .62225rem 0 #fff,.62933rem .62933rem 0 #fff,.6364rem .6364rem 0 #fff,.64347rem .64347rem 0 #fff,.65054rem .65054rem 0 #fff,.65761rem .65761rem 0 #fff,.66468rem .66468rem 0 #fff,.67175rem .67175rem 0 #fff,.67882rem .67882rem 0 #fff,.68589rem .68589rem 0 #fff,.69296rem .69296rem 0 #fff,.70004rem .70004rem 0 #fff,.70711rem .70711rem 0 #fff}.music-player:hover .iframe--wrapper:after{background-color:transparent;transition:all .3s ease-out}@media (min-width:30.01em) and (max-width:55em){.music-player{opacity:1;margin-bottom:5px}.music-player:hover{-webkit-transform:none;transform:none;box-shadow:none}}@media (max-width:29.99em){.music-player{border:0}}.music-player .kirby-plugin-oembed--YouTube{position:static}.info--section{color:#fff;text-align:center;padding:5%;min-height:75px}.info--section h3{font-size:1em}.flexgrid{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;height:100%;margin-bottom:5px;margin-right:-2%}@media (max-width:29.99em){.flexgrid{margin-right:0}}.grid-item--flex{width:23%;transition:all .3s ease-in-out}@media (min-width:120.01em){.grid-item--flex{width:18%}}@media (max-width:54.99em){.grid-item--flex{width:48%}}@media (max-width:29.99em){.grid-item--flex{width:100%;margin:4% 0}}.grid-item--flex img{display:block;width:100%;transition:all .3s linear}.element--center{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
